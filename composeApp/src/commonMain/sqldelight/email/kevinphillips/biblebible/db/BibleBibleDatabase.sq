CREATE TABLE IF NOT EXISTS BibleVerses (
    uuid TEXT PRIMARY KEY,
    id TEXT,
    b TEXT,
    c TEXT,
    v TEXT,
    t TEXT,
    version TEXT,
    chapterCount INTEGER,
    created_at TEXT DEFAULT CURRENT_TIMESTAMP
);

insertVerse:
INSERT INTO BibleVerses (
                uuid,
                id,
                b,
                c,
                v,
                t,
                version,
                chapterCount
            ) VALUES (?,?,?,?,?,?,?,?);

cleanBibleVerses:
DELETE FROM BibleVerses WHERE created_at < date('now', '-60 days');

selectVersesById:
SELECT BibleVerses.*
FROM BibleVerses WHERE id = ? AND version = ?;

selectReadingHistory:
SELECT DISTINCT BibleVerses.b, BibleVerses.c, DATE(BibleVerses.created_at)
FROM BibleVerses ORDER BY BibleVerses.created_at DESC LIMIT 50;

updateVerseTimestamp:
UPDATE BibleVerses SET created_at = CURRENT_TIMESTAMP WHERE b = ? AND c = ? AND version = ?;

selectVersesByBookId:
SELECT BibleVerses.*
FROM BibleVerses WHERE b = ? AND c = ? AND version = ?;

CREATE INDEX idx_id_bibleId ON BibleVerses(id, version);

countVerses:
SELECT COUNT(*) FROM BibleVerses;

removeExcessVerses:
DELETE FROM BibleVerses WHERE uuid IN (
    SELECT uuid FROM BibleVerses ORDER BY created_at ASC LIMIT (
        SELECT COUNT(*) - ? FROM BibleVerses
    )
);

countVersesByBookId:
SELECT ChapterCounts.chapterCount FROM ChapterCounts WHERE b = ? AND version = ?;

CREATE TABLE IF NOT EXISTS ChapterCounts (
    uuid TEXT PRIMARY KEY,
    b TEXT,
    version TEXT,
    chapterCount INTEGER,
    created_at TEXT DEFAULT CURRENT_TIMESTAMP
);

insertChapterCount:
INSERT INTO ChapterCounts (
                uuid,
                b,
                version,
                chapterCount
            ) VALUES (?,?,?,?);

CREATE TABLE IF NOT EXISTS LastCalled (
    id INTEGER PRIMARY KEY,
    time INTEGER NOT NULL
);

insertLastCalled:
INSERT INTO LastCalled (id, time) VALUES (1, ?);

getLastCalled:
SELECT * FROM LastCalled WHERE id = 1;

cleanLastCalled:
DELETE FROM LastCalled;